docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/starpg

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

parameters:
  go_version:
    type: string
    default: "1.17"

executors:
  docker-executor:
    docker:
      - image: cimg/go:<< pipeline.parameters.go_version >>-node
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
  machine-executor:
    machine:
      image: ubuntu-2204:2023.04.2
    resource_class: medium
    <<: *work_directory
  arm-executor:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: arm-executor
    environment:
      NODE_OPTIONS: "--openssl-legacy-provider"
    steps:
      - checkout
      - run: |
          make editor-install-deps editor-build install-deps
          make docker-build integration-test skip_pull=true go_version=<< pipeline.parameters.go_version >>

  build:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make editor-install-deps editor-build install-deps
      - save_cache:
          paths:
            - "/home/circleci/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}
      - persist_to_workspace:
          root: ~/starpg
          paths:
            - editor

  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/starpg
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              --build-arg GO_VERSION=<< pipeline.parameters.go_version >> \
              -t devatherock/starpg:$TAG \
              -t devatherock/starpg:latest \
              -f build/Dockerfile .

  dockerhub_readme:
    executor: machine-executor
    steps:
      - checkout
      - run: |
          docker run -v $PWD:/workspace \
              -e DOCKERHUB_USERNAME \
              -e DOCKERHUB_PASSWORD \
              -e DOCKERHUB_REPOSITORY='devatherock/starpg' \
              -e SHORT_DESCRIPTION='A web-based starlark playground' \
              -e README_FILEPATH='/workspace/readme.md' \
              peterevans/dockerhub-description:3.4.1

  integration_test:
    parameters:
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - run: |
          make integration-test

  release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/starpg
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/starpg:$TAG devatherock/starpg:$DEV_TAG

  deploy:
    executor: docker-executor
    <<: *resource_class
    steps:
      - run:
          name: Trigger deployment to render.com
          command: |
            curl $RENDER_DEPLOY_HOOK

  notify:
    docker:
      - image: devatherock/simple-slack:0.7.0
        <<: *docker_auth
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f"

workflows:
  version: 2.1
  build_deploy:
    jobs:
      - build:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - publish:
          context:
            - docker-credentials
          requires:
            - build
      - dockerhub_readme:
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          requires:
            - publish
      - integration_test:
          name: integration_test_amd
          context:
            - docker-credentials
          runner: machine-executor
          requires:
            - publish
      - integration_test:
          name: integration_test_arm
          context:
            - docker-credentials
          runner: arm-executor
          requires:
            - dockerhub_readme
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - integration_test_amd
            - integration_test_arm

  release:
    jobs:
      - release:
          context:
            - docker-credentials
          <<: *release_filter
      - deploy:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - release
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - deploy

  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          <<: *pr_filter
